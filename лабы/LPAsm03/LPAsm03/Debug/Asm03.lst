Microsoft (R) Macro Assembler Version 14.25.28612.0	    05/21/20 13:03:48
Asm03.asm						     Page 1 - 1


				.586P 
				.MODEL FLAT, STDCALL 
				includelib kernel32.lib 

				ExitProcess PROTO : DWORD 
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.STACK 4096 

 00000000			.CONST 

 00000000			.DATA 
 00000000 10 20 30 40		myBytes     byte   10h, 20h, 30h, 40h
 00000004 008A 003B 0044	myWords     word   8Ah, 3Bh, 44h, 5Fh, 99h
	   005F 0099
 0000000E 00000001		myDoubles   dword  1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 00000026 0000000E R		myPointer   dword  myDoubles



 0000002A 00000003		arr         dword  3, 4, 5, 6, 1, 2
	   00000004
	   00000005
	   00000006
	   00000001
	   00000002
 = 00000000			MB_OK       EQU    0 
 00000042 CC E5 F0 E3 E5	STR0        DB    "Мергель Каролина Андреевна, 1 курс, 4 группа", 0 
	   EB FC 20 CA E0
	   F0 EE EB E8 ED
	   E0 20 C0 ED E4
	   F0 E5 E5 E2 ED
	   E0 2C 20 31 20
	   EA F3 F0 F1 2C
	   20 34 20 E3 F0
	   F3 EF EF E0 00
 0000006F C5 F1 F2 FC 20	STR1        DB    "Есть нулевой эелемент",0 
	   ED F3 EB E5 E2
	   EE E9 20 FD E5
	   EB E5 EC E5 ED
	   F2 00
 00000085 CD F3 EB E5 E2	STR2        DB    "Нулевого элемента не найдено",0 
	   EE E3 EE 20 FD
	   EB E5 EC E5 ED
	   F2 E0 20 ED E5
	   20 ED E0 E9 E4
	   E5 ED EE 00
 000000A2 00000000		HW          DD    ? 
 00000000			.CODE 

 00000000			main PROC  
 00000000			START :   

 00000000  BE 00000000		    mov ESI, 0
 00000005  8B 86 00000012 R	    mov EAX, myDoubles[ESI + 4]  ; EAX=2
 0000000B  8B 96 0000000E R	    mov EDX, [myDoubles + ESI]   ; EDX=1

 00000011  B9 00000006		    mov ecx, lengthof arr
 00000016  BE 0000002A R	    mov esi, OFFSET arr
 0000001B  B8 00000000		    mov eax, 0
 00000020  BB 00000001		    mov ebx, 1

 00000025			CYCLE:
 00000025  03 06		    add eax, [esi]
 00000027  8B 16		    mov edx, [esi]
 00000029  83 FA 00		    cmp edx, 0
 0000002C  75 05		    jnz zf0
 0000002E  BB 00000000		    mov ebx, 0

 00000033			zf0:
 00000033  83 C6 04		    add esi, 4
 00000036  E2 ED		    loop CYCLE

 00000038  83 FB 00		    cmp ebx, 0
 0000003B  75 19		    jnz zf2

 0000003D			zf1:
				    INVOKE MessageBoxA, HW, OFFSET STR1,OFFSET STR0, MB_OK
 00000054  EB 19		    jmp enn

 00000056			zf2:
				    INVOKE MessageBoxA, HW, OFFSET STR2,OFFSET STR0, MB_OK
 0000006D  EB 00		    jmp enn

				 
 0000006F			enn:
 0000006F  6A FF		   push - 1  
 00000071  E8 00000000 E	   call ExitProcess  
 00000076			main ENDP 
				end main
Microsoft (R) Macro Assembler Version 14.25.28612.0	    05/21/20 13:03:48
Asm03.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000A6 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000076 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000076 Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 00000025 _TEXT	
  zf0  . . . . . . . . . . . . .	L Near	 00000033 _TEXT	
  zf1  . . . . . . . . . . . . .	L Near	 0000003D _TEXT	
  zf2  . . . . . . . . . . . . .	L Near	 00000056 _TEXT	
  enn  . . . . . . . . . . . . .	L Near	 0000006F _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
HW . . . . . . . . . . . . . . .	DWord	 000000A2 _DATA	
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
STR0 . . . . . . . . . . . . . .	Byte	 00000042 _DATA	
STR1 . . . . . . . . . . . . . .	Byte	 0000006F _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 00000085 _DATA	
arr  . . . . . . . . . . . . . .	DWord	 0000002A _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000026 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	

	   0 Warnings
	   0 Errors
